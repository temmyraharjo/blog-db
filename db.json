{
    "users": [
        {
            "id": 1,
            "userName": "admin",
            "firstName": "Temmy",
            "lastName": "Raharjo",
            "fullname": "Temmy Raharjo",
            "email": "me@me.com",
            "password": "p@ssword",
            "isActive": true
        },
        {
            "id": 2,
            "userName": "lusia.febriani",
            "firstName": "Lusia",
            "lastName": "Febriani",
            "fullname": "Lusia Febriani",
            "email": "me@me.com",
            "password": "p@ssword",
            "isActive": false
        },
        {
            "id": 3,
            "userName": "jeanetta.clarisse",
            "firstName": "Jeanetta",
            "lastName": "Clarisse",
            "fullname": "Jeanetta Clarrise Raharjo",
            "email": "me@me.com",
            "password": "p@ssword",
            "isActive": true
        }
    ],
    "posts": [
        {
            "id": 1,
            "title": "About Cyclomatic Complexity",
            "date": "2020-01-02",
            "body": "I read one of the blog post in [Dev.To about this Cyclomatic Complexity](https://dev.to/designpuddle/coding-concepts---cyclomatic-complexity-3blk) and I couldn't resist my self also to not talk about this one. Because I see a lot of programmers doing this mistake without they knowing it.\n\nSo just today I check my email and see there is an automatic email contain changeset from one of my co-worker checkin this code:\n\n\\[code language=\"javascript\"\\] function CheckEventBooking(EventMaintenanceInfo) { var AllowOverbooking, targetedbalance, Waitinglist, OverBookingpax; if (EventMaintenanceInfo.results\\[0\\].gent\\_AllowOverBooking != null) { AllowOverbooking = EventMaintenanceInfo.results\\[0\\].gent\\_AllowOverBooking; } if (EventMaintenanceInfo.results\\[0\\].gent\\_TargetedPAXBalance != null) { targetedbalance = EventMaintenanceInfo.results\\[0\\].gent\\_TargetedPAXBalance; } if (EventMaintenanceInfo.results\\[0\\].gent\\_IsWaitListAllowed != null) { Waitinglist = EventMaintenanceInfo.results\\[0\\].gent\\_IsWaitListAllowed; } if (EventMaintenanceInfo.results\\[0\\].gent\\_OverbookingPax != null) { OverBookingpax = EventMaintenanceInfo.results\\[0\\].gent\\_OverbookingPax; } //checking the balance if (targetedbalance == 0) { if (AllowOverbooking || Waitinglist) { if (AllowOverbooking && Waitinglist && OverBookingpax > 0) { var confirm = window.confirm(\"OverBooking & Waitinglist is allowed do you want to Confirm or Waitlist\"); if (confirm) { Xrm.Page.getAttribute(\"gent\\_confirmation\").setValue(\"Confirm\"); } else { Xrm.Page.getAttribute(\"gent\\_confirmation\").setValue(\"Waitinglist\"); } } return true; } else { alert(\"Cannot register since overbooking and waitinglist are false\"); return false } } else return true; } \\[/code\\]\n\nThis function is almost similar with [pattern from this blog post](https://blog.codinghorror.com/flattening-arrow-code/). Coding horror (yes this is the blog's name) named this pattern as arrow code. People tend to do this one because it a normal things when we do programming, we add code, add condition, add code again, add condition then viola! You created the horror story.\n\n### Changes\n\nBelow is my suggestion for above code:\n\n\\[code language=\"javascript\"\\] function CheckEventBooking(eventMaintenanceInfo) { var data = eventMaintenanceInfo.results\\[0\\]; var allowOverBooking = data.gent\\_AllowOverBooking; var targetedPaxBalance = data.gent\\_TargetedPAXBalance; var waitingList = data.gent\\_IsWaitListAllowed; var overBookingPax = data.gent\\_OverbookingPax;\n\nif(!targetedPaxBalance || targetedPaxBalance !== 0) return true; var valid = allowOverBooking || waitingList; if(!valid) { alert(\"Cannot register since overbooking and waitinglist are false\"); return false; }\n\nif (allowOverBooking && waitingList && overBookingPax > 0) { var confirm = window.confirm(\"OverBooking & Waitinglist is allowed do you want to Confirm or Waitlist\"); var result = confirm ? \"Confirm\" : \"Waitinglist\";\n\nXrm.Page.getAttribute(\"gent\\_confirmation\").setValue(result); }\n\nreturn true; } \\[/code\\]\n\nWith this fixes, you will see more readability code. You cut lot of complexity (remove if else statement).\n\nSo how you think? Is it more **clean?**"
        },
        {
            "id": 2,
            "title": "Caching All You Can Cache!",
            "date": "2020-01-02",
            "body": "Caching is one of the things you can do to improve your application performance. In JavaScript programming, we have [sessionStorage](https://www.google.com/search?ei=yZlrW5PcJtf_rQG5wLu4Aw&q=sessionstorage&oq=sessionstorage&gs_l=psy-ab.3..35i39k1j0i67k1l4j0j0i20i263k1j0l3.2952.3167.0.3399.2.2.0.0.0.0.65.126.2.2.0....0...1c.1.64.psy-ab..0.2.126....0.iENWZgMkmbw) and [localStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) API to do the caching.  sessionStorage is browser's storage that will keep only for that session only. So when you close the tab, it will disappear. Meanwhile localStorage more persistance.\n\nWhen you caching something, you will get benefit from it because you don't need to retrieve again some data. But also if you don't use it in a good manner, it will leverage bug on your system. For instance you cache User data, but at the same time someone changed your User data. For this case of course when you open your apps, it will display wrong output because we still get data from cache instead of retrieve from database.\n\nThat is why usually I prefer to use sessionStorage because of its nature. I don't need to have procedure to clear the cache because user will do it automatically when they close the browser. But of course when that user need the data, it will retrieve again which is not so good compare to localStorage.\n\nOne thing you must consider before you cache something, **you need to know what type of data you can cache. It is very important to know before do it. If your data always change all the time. Then you don't need to cache it**.\n\nThis is API for cache using sessionStorage (you can change it into localStorage if you want to):\n\nhttps://gist.github.com/temmyraharjo/441bf2a71993e296ec9c590b1cddc532\n\nHow to used it:\n\nhttps://gist.github.com/temmyraharjo/d769a2f3335501875466ca22d3f4d4fb\n"
        }
    ]
}